package com.curso.ESPE.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.curso.ESPE.entity.Curso;
import com.curso.ESPE.service.EstudianteService;

import java.util.Optional;

@RestController 
@RequestMapping("api/estudiantes")
public class CursoController {

    @Autowired
    EstudianteService estudianteService;

    @GetMapping
    public ResponseEntity<?> findAllEstudiantes() {
        return ResponseEntity.ok(estudianteService.getAll());
    }

    @GetMapping("/{idEstudiante}")
    public ResponseEntity<Object> findEstudianteById(@PathVariable("idEstudiante") Long id) {
        Optional<Curso> curso = estudianteService.getEstudianteById(id);
        return curso
                .<ResponseEntity<Object>>map(ResponseEntity::ok)
                .orElseGet(() -> ResponseEntity.status(HttpStatus.NOT_FOUND).body("Estudiante no encontrado"));
    }

    @PostMapping
    public ResponseEntity<?> createEstudiante(@RequestBody Curso curso) {
        return ResponseEntity.status(HttpStatus.CREATED).body(estudianteService.CreateEstudiante(curso));
    }

    @PutMapping("/{idEstudiante}")
    public ResponseEntity<?> updateEstudiante(@PathVariable("idEstudiante") Long id, @RequestBody Curso curso) {
        boolean updated = estudianteService.UpdateEstudiante(curso, id);
        if (updated) {
            return ResponseEntity.ok("Estudiante actualizado correctamente");
        } else {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Estudiante no encontrado");
        }
    }

    @DeleteMapping("/{idEstudiante}") // Correcci√≥n de la ruta
    public ResponseEntity<?> deleteEstudiante(@PathVariable("idEstudiante") Long id) {
        boolean deleted = estudianteService.DeleteEstudiante(id);
        if (deleted) {
            return ResponseEntity.ok("Estudiante eliminado correctamente");
        } else {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Estudiante no encontrado");
        }
    }
}
